$date
  Tue Jun  2 16:51:07 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module tb_pong_top_st $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # hsync $end
$var reg 1 $ vsync $end
$var reg 3 % rgb[2:0] $end
$scope module uut $end
$var reg 1 & clk $end
$var reg 1 ' rst $end
$var reg 1 ( hsync $end
$var reg 1 ) vsync $end
$var reg 3 * rgb[2:0] $end
$var reg 12 + pixel_x[11:0] $end
$var reg 12 , pixel_y[11:0] $end
$var reg 1 - video_on $end
$var reg 1 . pixel_tick $end
$var reg 3 / rgb_reg[2:0] $end
$var reg 3 0 rgb_next[2:0] $end
$scope module vga_sync_unit $end
$var reg 1 1 clk $end
$var reg 1 2 rst $end
$var reg 1 3 hsync $end
$var reg 1 4 vsync $end
$var reg 1 5 video_on $end
$var reg 1 6 p_tick $end
$var reg 12 7 pixel_x[11:0] $end
$var reg 12 8 pixel_y[11:0] $end
$var reg 12 9 v_count[11:0] $end
$var reg 12 : h_count[11:0] $end
$upscope $end
$scope module pong_grf_st_unit $end
$var reg 1 ; video_on $end
$var reg 12 < pixel_x[11:0] $end
$var reg 12 = pixel_y[11:0] $end
$var reg 3 > graph_rgb[2:0] $end
$var reg 10 ? pix_x[9:0] $end
$var reg 10 @ pix_y[9:0] $end
$var reg 1 A wall_on $end
$var reg 3 B wall_rgb[2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
